name: Build
on: [push, pull_request]
jobs:
  prepare-e2e-web-app:
    name: Prepare web app for E2E
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Build and Instrument
        run: |
          npm ci --no-audit
          npm run build -- --configuration=development
          npm run instrument
      - name: Store web app
        uses: actions/upload-artifact@v4
        with:
          name: prepare-e2e-web-app
          path: www
          retention-days: 1
  build-web-app:
    name: Build - Web App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Cache Global NPM packages
        uses: actions/cache@v4
        with:
          key: npm-global-packages
          path: ~/.npm
      - name: Build Production
        run: |
          npm ci
          npm run build -- --configuration=production
          npm run generate-public-pages
          rm www/browser/media/*
          rmdir www/browser/media
      - name: Store web app
        uses: actions/upload-artifact@v4
        with:
          name: web-app
          path: www/browser
          retention-days: 30
  build-android:
    name: Build - Android App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Cache Global NPM packages
        uses: actions/cache@v4
        with:
          key: npm-global-packages
          path: ~/.npm
      - name: Install dependencies
        run: |
          npm install -g @ionic/cli @angular/cli cpy-cli rimraf
          npm ci
      - name: Trust store
        uses: Acohen-work/secret-to-file-action@v1
        with:
          filename: 'trailence.jks'
          working-directory: './android'
          base64-encoded-secret: ${{ secrets.JKS_BASE64 }}
      - name: Keys
        uses: Acohen-work/secret-to-file-action@v1
        with:
          filename: 'keys.gradle'
          working-directory: './android'
          base64-encoded-secret: ${{ secrets.KEYS_GRADLE_BASE64 }}
      - name: Build Android
        run: |
          ionic capacitor sync android --configuration=android-prod
          rimraf android/app/src/main/assets/public/assets/apk
          rimraf android/app/src/main/assets/public/assets/admin
          rimraf android/app/src/main/assets/public/assets/home-page
          rimraf android/app/src/main/assets/public/media
          cd android/environments/prod
          cpy . ../..
          cd ../../..
          cd android
          chmod 777 ./gradlew
          ./gradlew assembleRelease
      - name: Store APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-release
          path: android/app/build/outputs/apk/release
          retention-days: 30
  unit-tests-web-app:
    name: Unit Tests - Web App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: |
          npm ci
      - name: Unit Tests
        run: npm run test -- --configuration=ci
      - name: Store coverage results
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-web-app-coverage-report
          path: ./coverage/app/lcov.info
          if-no-files-found: error
          retention-days: 5
  e2e-tests-web-app:
    needs:
      - prepare-e2e-web-app
    strategy:
      fail-fast: false
      matrix:
        test:
          - "1:browser:chrome:desktop:00000+00010,00100+00300+00001,00301+00400,00800+00900+50000"
          - "2:browser:chrome:desktop:00200+00201+00250+00205+00260,01000+00500"
          - "3:browser:chrome:mobile:00000+00010,00100+00300+00001,00301+00400,00800+00900+50000"
          - "4:browser:chrome:mobile:00200+00201+00250+00205+00260,01000+00500"
          - "5:browser:firefox:desktop:00000+00010,00100+00300+00001,00301+00400,00800+00900+50000"
          - "6:browser:firefox:desktop:00200+00201+00250+00205+00260,01000+00500"
          - "7:browser:firefox:mobile:00000+00010,00100+00300+00001,00301+00400,00800+00900+50000"
          - "8:browser:firefox:mobile:00200+00201+00250+00205+00260,01000+00500"
    name: E2E ${{matrix.test}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Retrieve web app
        uses: actions/download-artifact@v4
        with:
          name: prepare-e2e-web-app
          path: www
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            trailence/front
          tags: |
            type=ref,prefix=snapshot-,event=branch
            type=ref,event=tag
      - name: Tests End 2 End
        id: e2e
        run: |
          mkdir .nyc_output
          cd e2e
          chmod 777 ./*.sh
          test_name=$(npm run tests_to_filename --silent -- ${{matrix.test}})
          echo "test_name=$test_name" >> $GITHUB_OUTPUT
          cd github
          chmod 777 ./*.sh
          ./prepare_tests.sh "--tests=${{matrix.test}}"
          ./run.sh "--tests=${{matrix.test}}"
      - name: Build coverage report
        run: |
          ls -l .nyc_output
          cd e2e
          npm run coverage-report
          ls -l ../coverage/e2e
          sed -i -e 's!www/browser/!!' ../coverage/e2e/lcov.info
          mv ../coverage/e2e/lcov.info ../coverage/e2e/${{ steps.e2e.outputs.test_name }}.info
          ls -l ../coverage/e2e
      - name: Upload output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wdio_output_${{github.run_number}}_${{ steps.e2e.outputs.test_name }}
          path: e2e/output
          retention-days: 5
      - name: Store coverage results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-tests-web-app-${{ steps.e2e.outputs.test_name }}-coverage-report
          path: ./coverage/e2e/${{ steps.e2e.outputs.test_name }}.info
          if-no-files-found: error
          retention-days: 5
  sonar:
    name: Sonar Analysis
    runs-on: ubuntu-latest
    needs:
      - unit-tests-web-app
      - e2e-tests-web-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Retrieve web app unit tests coverage results
        uses: actions/download-artifact@v4
        with:
          name: unit-tests-web-app-coverage-report
          path: coverage/app
      - name: Retrieve web app e2e tests coverage results
        uses: actions/download-artifact@v4
        with:
          path: coverage/e2e
          pattern: e2e-tests-web-app-*-coverage-report
          merge-multiple: true
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ env.SONAR_TOKEN != '' }}
