name: Build
on: [push, pull_request]
jobs:
  prepare-e2e-web-app:
    name: Prepare web app for E2E
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Build and Instrument
        run: |
          npm ci
          npm run build -- --configuration=development
          npm run instrument
      - name: Store web app
        uses: actions/upload-artifact@v4
        with:
          name: prepare-e2e-web-app
          path: www
          retention-days: 1
  build-web-app:
    name: Build - Web App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Cache Global NPM packages
        uses: actions/cache@v4
        with:
          key: npm-global-packages
          path: ~/.npm
      - name: Build Production
        run: |
          npm ci
          npm run build -- --configuration=production
  build-android:
    name: Build - Android App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Cache Global NPM packages
        uses: actions/cache@v4
        with:
          key: npm-global-packages
          path: ~/.npm
      - name: Install dependencies
        run: |
          npm install -g @ionic/cli @angular/cli cpy-cli rimraf
          npm ci
      - name: Build Android
        run: |
          ionic capacitor sync android --configuration=android-prod
          rimraf android/app/src/main/assets/public/assets/apk
          cd android/environments/prod
          cpy . ../..
          cd ../../..
          cd android
          echo "ext { jkspass = '' }" > keys.gradle
          chmod 777 ./gradlew
          ./gradlew assembleDebug
  unit-tests-web-app:
    name: Unit Tests - Web App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: |
          npm ci
      - name: Unit Tests
        run: npm run test -- --configuration=ci
      - name: Store coverage results
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-web-app-coverage-report
          path: ./coverage/app/lcov.info
          if-no-files-found: error
          retention-days: 5
  e2e-tests-web-app:
    needs:
      - prepare-e2e-web-app
    strategy:
      fail-fast: false
      matrix:
        browser: ["chrome","firefox"]
        mode: ["desktop","mobile"]
        test-set: ["00000+01000", "00100+00300", "00400+00500", "00200+00800"]
    name: E2E ${{matrix.browser}} ${{matrix.mode}} ${{matrix.test-set}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Retrieve web app
        uses: actions/download-artifact@v4
        with:
          name: prepare-e2e-web-app
          path: www
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            trailence/front
          tags: |
            type=ref,prefix=snapshot-,event=branch
            type=ref,event=tag
      - name: Tests End 2 End
        id: e2e
        run: |
          mkdir .nyc_output
          cd e2e
          npm ci
          cd github
          chmod 777 ./run.sh
          ./run.sh --trailence-mode=${{matrix.mode}} --test-browser=${{matrix.browser}} --test-only=${{matrix.test-set}}/
      - name: Build coverage report
        run: |
          ls -l .nyc_output
          cd e2e
          npm run coverage-report
          ls -l ../coverage/e2e
          sed -i -e 's!www/browser/!!' ../coverage/e2e/lcov.info
          mv ../coverage/e2e/lcov.info ../coverage/e2e/${{matrix.browser}}_${{matrix.mode}}_${{matrix.test-set}}.info
          ls -l ../coverage/e2e
      - name: Upload failure screenshot
        if: ${{ failure() && steps.e2e.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: wdio_error_${{github.run_number}}_${{matrix.browser}}_${{matrix.mode}}_${{matrix.test-set}}.png
          path: e2e/wdio_error.png
          retention-days: 5
      - name: Store coverage results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-tests-web-app-${{matrix.browser}}-${{matrix.mode}}-${{matrix.test-set}}-coverage-report
          path: ./coverage/e2e/${{matrix.browser}}_${{matrix.mode}}_${{matrix.test-set}}.info
          if-no-files-found: error
          retention-days: 5
  sonar:
    name: Sonar Analysis
    runs-on: ubuntu-latest
    needs:
      - unit-tests-web-app
      - e2e-tests-web-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Retrieve web app unit tests coverage results
        uses: actions/download-artifact@v4
        with:
          name: unit-tests-web-app-coverage-report
          path: coverage/app
      - name: Retrieve web app e2e tests coverage results
        uses: actions/download-artifact@v4
        with:
          path: coverage/e2e
          pattern: e2e-tests-web-app-*-coverage-report
          merge-multiple: true
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ env.SONAR_TOKEN != '' }}
